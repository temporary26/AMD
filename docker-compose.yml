version: '3.8'

services:
  # SQL Server Database
  sqlserver:
    image: mcr.microsoft.com/mssql/server:2022-latest
    environment:
      SA_PASSWORD: "YourStrong@Passw0rd"
      ACCEPT_EULA: "Y"
    ports:
      - "1433:1433"
    volumes:
      - sqlserver_data:/var/opt/mssql
    networks:
      - urlshortener-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - urlshortener-network

  # URL Service
  url-service:
    build:
      context: .
      dockerfile: src/Services/UrlShortener.UrlService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=UrlShortenerDB;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true
      - ConnectionStrings__Redis=redis:6379
    ports:
      - "5001:8080"
    depends_on:
      - sqlserver
      - redis
    networks:
      - urlshortener-network

  # Analytics Service
  analytics-service:
    build:
      context: .
      dockerfile: src/Services/UrlShortener.AnalyticsService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=UrlShortenerAnalyticsDB;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true
      - ConnectionStrings__Redis=redis:6379
    ports:
      - "5002:8080"
    depends_on:
      - sqlserver
      - redis
    networks:
      - urlshortener-network

  # User Service
  user-service:
    build:
      context: .
      dockerfile: src/Services/UrlShortener.UserService/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=UrlShortenerUserDB;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true
      - ConnectionStrings__Redis=redis:6379
    ports:
      - "5003:8080"
    depends_on:
      - sqlserver
      - redis
    networks:
      - urlshortener-network

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: src/ApiGateway/UrlShortener.Gateway/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    ports:
      - "5000:8080"
    depends_on:
      - url-service
      - analytics-service
      - user-service
    networks:
      - urlshortener-network

  # Web Application
  web-app:
    build:
      context: .
      dockerfile: src/Web/UrlShortener.WebApp/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=sqlserver,1433;Database=UrlShortenerWebDB;User Id=sa;Password=YourStrong@Passw0rd;TrustServerCertificate=true
      - ApiGatewayUrl=http://api-gateway:8080
    ports:
      - "5004:8080"
    depends_on:
      - api-gateway
      - sqlserver
    networks:
      - urlshortener-network

volumes:
  sqlserver_data:
  redis_data:

networks:
  urlshortener-network:
    driver: bridge
